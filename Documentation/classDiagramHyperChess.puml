@startuml
'https://plantuml.com/sequence-diagram
package assembler{
class main{
+ main()
}
}
package ui{
class ChessMode{

}

class HyperChess {
    + start()
    + startApplication()
}
}
package data{
}
package logic {

class GameManager{
- int: turnCount
- Chessboard: board
- Player: player1
- Player: player2
- Player: currentTurn
+ swapTurn()
+ previewPiece()
+ generateBoard()
}

class Chessboard{
- Tile[]: board
- Piece[]: activePieces
+ movePiece(String: boardLocation, Piece: piece)
- generate(int: boardWidth, int boardHeight)
+ removePieceFromBoard(piece: taken)
}

class Player{
- String: name
- Piece[] piecesTaken
- int: associatedColor
+ addPiece()
}

class Piece{
- String: job
- String: location
+ move(String: boardLocation)
+ surrender(Player: player)
}

class Tile{
- String: location
- String: color
+ previewMode()
}

GameManager->Chessboard
GameManager->Player
Chessboard->Piece
Chessboard->Tile
}
assembler->ui
assembler->logic



@enduml